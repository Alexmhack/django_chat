from django.db import models
from django.contrib.auth import get_user_model

from uuid import uuid4

User = get_user_model()

def deserialize_user(user):
	"""Deserialize user instance to JSON"""
	return {
		'id': user.id, 'username': user.username, 'email': user.email,
		'first_name': user.first_name, 'last_name': user.last_name
	}


class TrackableDateModel(models.Model):
	"""Abstract model to track the creation/update date for a model"""

	created_date = models.DateTimeField(auto_now_add=True)
	updated_date = models.DateTimeField(auto_now=True)

	class Meta:
		abstract = True


def _generate_unique_uri():
	return str(uuid4()).replace('-', '')[:15]


class ChatSession(TrackableDateModel):
	"""A chat session. The uri's are generated by taking
	the first 15 characters from a UUID"""

	owner = models.ForeignKey(User, on_delete=models.PROTECT)
	uri = models.URLField(default=_generate_unique_uri)


class ChatSessionMessage(TrackableDateModel):
	"""Store messages for a session"""

	user = models.ForeignKey(User, on_delete=models.PROTECT)
	chat_session = models.ForeignKey(
		ChatSession, related_name='messages', on_delete=models.PROTECT
	)
	message = models.TextField(max_length=2500)

	def to_json(self):
		"""Deserialize message to JSON"""
		return {'user': deserialize_user(self.user), 'message': self.message}


class ChatSessionMember(TrackableDateModel):
	"""Store all users in a chat session"""

	chat_session = models.ForeignKey(
		ChatSession, related_name='members', on_delete=models.PROTECT
	)
	user = models.ForeignKey(User, on_delete=models.PROTECT)
